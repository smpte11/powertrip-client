name: frontend_$(BuildDefinitionName)_$(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - master
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Test
    jobs:
      - job: Test
        displayName: Running unit tests
        container: node:lts
        steps:
          - script: |
              npm install
              npm run test:unit --ci --reporters=default --reporters=jest-junit
            displayName: Run unit tests

          - task: PublishTestResults@2
            displayName: Publish tests resutls
            condition: succeededOrFailed()
            inputs:
              testRunner: JUnit
              testResultsFiles: '**/junit.xml'

  - stage: Build
    dependsOn: Test
    jobs:
      - job: Build
        displayName: Build Powertrip Frontend
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        steps:
          - script: |
              npm install
              npm run build
            displayName: Building production app

          - task: ArchiveFiles@2
            displayName: Create archive of dist
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: frontend

  - stage: Deploy
    displayName: Deploy Powertrip Frontend
    dependsOn: Build
    jobs:
      - deployment: DeploySPA
        displayName: Deploy Powertrip Frontend Job
        environment: client-prod
        pool:
          vmImage: windows-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: frontend
                  patterns: '**/*.zip'
                
                - script: |
                    ls -la $(Pipeline.Workspace)/frontend

                - task: ExtractFiles@1
                  displayName: 'Extract files '
                  inputs:
                    archiveFilePatterns: '$(Pipeline.Workspace)/frontend/$(Build.BuildId).zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/$(Build.BuildId)'
                - task: AzureFileCopy@3
                  displayName: 'Copy to Blob'
                  inputs:
                    SourcePath: '$(System.DefaultWorkingDirectory)/$(Build.BuildId)/dist'
                    azureSubscription: 'Pay-As-You-Go (46c3f0fc-e27c-4325-b79a-edcac2dd8a85)'
                    Destination: AzureBlob
                    storage: powertripfrontendsa
                    ContainerName: '$web'
